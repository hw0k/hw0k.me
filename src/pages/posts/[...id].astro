---
import type { InferGetStaticParamsType, GetStaticPaths } from 'astro';

import { getCollection, getEntry, render } from "astro:content";
import { getExcerptFromPostBody } from "~/libs/post-utils";
import Layout from "~/components/layout.astro";
import Prose from "~/components/prose.astro";
import GiscusContainer from "~/components/giscus-container.astro";

export const getStaticPaths = (async () => {
  const posts = await getCollection('posts');
  return posts.map((post) => {
    return {
      params: { id: post.id },
    };
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;

const { id } = Astro.params satisfies Params;

const post = await getEntry('posts', id);
if (!post) {
  throw new Error();
}

const { Content, headings } = await render(post);
const { title, publishedAt, updatedAt, description } = post.data;

const ogDescription = description ?? getExcerptFromPostBody(post?.body ?? '');
---

<Layout title={title} description={ogDescription}>
  <article class="container mx-auto mb-12">
    <header class="mb-8">
      <p class="text-sm text-theme-muted">{publishedAt.toISOString().slice(0, 10)}</p>
      <h1 class="text-4xl text-theme-heading font-extrabold leading-snug">{title}</h1>
    </header>
    <Prose>
      <Content />
    </Prose>
  </article>
  <GiscusContainer />
</Layout>
