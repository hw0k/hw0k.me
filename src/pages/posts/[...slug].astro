---
import { getCollection } from "astro:content";
import { getEntries } from "astro:content";
import { getEntry } from "astro:content";

import type { InferGetStaticParamsType, InferGetStaticPropsType, GetStaticPaths } from 'astro';
import Layout from "~/components/layout.astro";
import Prose from "~/components/prose.astro";
import GiscusContainer from "~/components/giscus-container.astro";

export const getStaticPaths = (async () => {
  const posts = await getCollection('posts');
  return posts.map((post) => {
    return {
      params: { slug: post.slug },
      props: post,
    };
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { slug } = Astro.params satisfies Params;

const {
  data: {
    title,
    publishedAt,
    tags,
  },
  render,
} = Astro.props;

const { Content, headings } = await render();
---

<Layout pageTitle={title}>
  <article class="container mx-auto mb-12">
    <header class="mb-8">
      <p class="text-sm text-gray-500">{publishedAt.toISOString().slice(0, 10)}</p>
      <h1 class="text-4xl text-black dark:text-white font-extrabold leading-snug">{title}</h1>
    </header>
    <Prose>
      <Content />
    </Prose>
  </article>
  <GiscusContainer />
</Layout>